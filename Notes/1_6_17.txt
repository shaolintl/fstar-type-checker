main_fstar in Fstartest before adding:

accumulate PTS_typing_refiner_machine.
accumulate PTS_machine_refiner.

to Fstarkernel:

1  arr (sort (s+type u+1)) x0 \ arr x0 x1 \ x0
2  nat
3  arr (sort (s+type u+0)) x0 \ abbr (sort (s+type u+0)) (arr nat x1 \ nat) x1 \ nat
Fail

And after:

1  arr (sort (s+type u+1)) x0 \ arr x0 x1 \ x0
"##"  comp (sort (s+type u+0)) [] leq (sort (s+type u+1)) []
"##"  comp nat [] leq (abbr (sort (s+type u+0)) (arr nat x0 \ nat) x0 \ nat) []
"##"  comp nat [] leq nat []
"##"  comp (abbr (sort (s+type u+0)) (arr nat x0 \ nat) x0 \ nat) [] leq nat []
"##"  comp nat [] leq nat []
2  nat
"##"  comp nat [] leq (abbr (sort (s+type u+0)) (arr nat x1 \ nat) x1 \ nat) []
"##"  comp nat [] leq nat []
"##"  comp (sort (s+type u+0)) [] leq (sort (s+type u+0)) []
3  arr (sort (s+type u+0)) x0 \ abbr (sort (s+type u+0)) (arr nat x1 \ nat) x1 \ nat
Fail

Hereâ€™s the main_fstar for future reference:

% structure test worked out, so there's definitely something wrong with the typing here...
main_fstar :- 
     P1 = (lam (sort (s+type u+1)) t\ lam t x\ x),
     of P1 P1T, $print 1 P1T, !,
     P2 = (app (app P1 nat) (app s o)),
     of P2 P2T, $print 2 P2T, !,
     Const = (lam (sort (s+type u+0)) _\ (app s o)),
     of Const Constt, $print 3 Constt, !
     Incr = (lam (sort (s+type u+0)) x\ (app s x)),
     of Incr Incrt, $print 4 Incrt, !,
     true.

What happens if I replace of s (app (lam (sort (s+type u+0)) x\ x) (arr nat _\ nat)). with just of s (arr nat _\ nat)?

1  arr (sort (s+type u+1)) x0 \ arr x0 x1 \ x0
"##"  comp (sort (s+type u+0)) [] leq (sort (s+type u+1)) []
"##"  comp nat [] leq nat []
"##"  comp nat [] leq nat []
2  nat
"##"  comp nat [] leq nat []
3  arr (sort (s+type u+0)) x0 \ nat
Fail

Observe: #3 has big difference

